{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype;// 获取数组的原型\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [// 找到所有的变异方法\r\n  'push','pop','shift','unshift','reverse','sort','splice'\r\n];\r\n// concat slice 不会改变原来的数据\r\nmethods.forEach(method=>{\r\n  // 代理newArrayProto身上的方法\r\n  newArrayProto[method] = function(...args){// 重写数组的方法\r\n    // console.log(\"method\",method);\r\n    // console.log(\"args\",args);\r\n    // 内部调用原来的方法 函数的劫持，切片编程\r\n    const result = oldArrayProto[method].call(this,...args);\r\n    // 对新添加的数据，再次进行劫持\r\n    let inserted;// 需要进行劫持的代码\r\n    let ob = this.__ob__;// 拿到Observe\r\n    switch(method){\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice': // arr.splice(0,1,{a:1},{b:2})\r\n        // 前两个参数是方法用的，需要截取一下，获取实际参数\r\n        inserted = args.slice(2)\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(\"inserted\",inserted);\r\n    if(inserted){\r\n      // 对新增的内容进行观测\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result;\r\n  }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\n/**\r\n * 该对象上有一些方法，调用这些方法可以对数据进行响应式代理\r\n */\r\nclass Observe{\r\n  // 一开始进入该方法，一定是一个对象，然后才是其他东西\r\n  constructor(data){\r\n    // 想当于给数据加了一个标识，如果数据上有这个属性，说明被观测过\r\n    // data.__ob__ = this;// Observe对象挂载到数据身上，方便使用\r\n    Object.defineProperty(data,'__ob__',{\r\n      value:this, \r\n      enumerable:false\r\n    })\r\n    // 判断用户是否是一个数组\r\n    if(Array.isArray(data)){\r\n      // 重写数组的方法 7的变异方法 可以修改数组本身\r\n      // 调用data向上查询方法的时候，被调用被劫持的函数\r\n      data.__proto__ = newArrayProto;\r\n      // \"[a,{b:13}]\",数组中的对象要进行响应式劫持\r\n      this.observeArray(data);\r\n    }else{// 不是数组的情况\r\n      this.walk(data);\r\n    }\r\n  }\r\n  /**\r\n   * 循环该对象所有keys，对所有属性进行代理劫持\r\n   * @param {待劫持的数据对象} data \r\n   */\r\n  walk(data){\r\n    // 重新定义属性\r\n    Object.keys(data).forEach(key=> defineReactive(data,key,data[key]))\r\n  }\r\n  /**\r\n   * 监听数组中的对象数据\r\n   * @param {待监听的数据} data \r\n   */\r\n  observeArray(data){\r\n    // 对数组中的 对象 数据进行监听，不是对象的数据\r\n    // 被observe return掉了\r\n    data.forEach(item=>observe(item))\r\n  }\r\n}\r\n/**\r\n * \r\n * @param {重新定义数据的目标} target \r\n * @param {目标的key} key \r\n * @param {目标的value} value \r\n */\r\nexport function defineReactive(target,key,value){\r\n  // 使用递归，对值为对象的数据，再次进行劫持\r\n  observe(value);// 内部进行判断，如果value不是对象，则结束调用\r\n  Object.defineProperty(target,key,{\r\n    // 取值的时候\r\n    get(){\r\n      return value;\r\n    },\r\n    // 修改的时候\r\n    set(newValue){\r\n      if(newValue===value)return;\r\n      // 如果设置的值是一个对象，继续进行代理\r\n      observe(newValue);\r\n      value = newValue;\r\n    }\r\n  })\r\n\r\n}\r\n/**\r\n * 劫持用户的数据，进行响应式代理\r\n * 会判断用户的数据里面是不是还是对象\r\n * 如果还是对象，则会递归调用代理\r\n * @param {用户选项data中的数据} data \r\n */\r\nexport function observe(data){\r\n  if(typeof data !== 'object'||data === null){\r\n    return;// 只对对象做劫持\r\n  }\r\n  \r\n  // 如果一个对象被劫持了，那就不需要再被劫持了\r\n  // 要判断一个对象是否被劫持过了，\r\n  // 可以增添一个实例，用实例来判断是否被劫持过\r\n  if(data.__ob__ instanceof Observe){\r\n    // 标识该对象已经被代理过了\r\n    return data.__ob__;\r\n  }\r\n\r\n  return new Observe(data);\r\n}","import { observe } from \"./observe/index\";\r\n\r\n/**\r\n * 初始化用户状态 data,props,methods,watch...\r\n * @param {Vue实例对象} vm \r\n */\r\nexport function initState(vm){\r\n  const opts = vm.$options;// 获取所有的选项\r\n  // if(opts.props){\r\n  //   initProps\r\n  // }\r\n  if(opts.data){\r\n    initData(vm)\r\n  }\r\n}\r\n/**\r\n * \r\n * @param {实例} vm \r\n * @param {代理数据} target \r\n * @param {代理数据的key} key \r\n */\r\nfunction proxy(vm,target,key){\r\n  // vm.name ==> vm._data.name\r\n  Object.defineProperty(vm,key,{\r\n    get(){\r\n      return vm[target][key]\r\n    },\r\n    set(newValue){\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n/**\r\n * 对 options.data 数据进行响应式拦截\r\n * @param {Vue实例对象} vm \r\n */\r\nfunction initData(vm){\r\n  // 将对象上的数据重新 赋值了一份，data和源对象断开连接\r\n  let data = vm.$options.data;// 可能是函数或对象\r\n  data = typeof data === 'function'?data.call(vm):data;\r\n  // 给实例对象设置上data，可以获取到代理劫持后的数据\r\n  vm._data = data\r\n  // 对数据进行劫持 vue2采用defineProperty\r\n  observe(data);\r\n  // 将vm._data上的所有数据代理直接代理到实例对象上\r\n  for(let key in data){\r\n    proxy(vm,'_data',key)\r\n  }\r\n\r\n}","import { initState } from \"./state\";\r\n\r\n/**\r\n * 用于给Vue实例身上拓展方法\r\n * @param {Vue实例对象} Vue \r\n */\r\nexport function initMixin(Vue){\r\n  /**\r\n   * 用于初始化操作\r\n   */\r\n  Vue.prototype._init = function(options){\r\n    const vm = this;\r\n    // 将用户传入的配置数据装载到Vue实例身上，方便其他方法获取配置数据\r\n    vm.$options = options;\r\n    \r\n    initState(vm);\r\n    if(options.el){\r\n      vm.$mount(options.el)\r\n    }\r\n\r\n  } \r\n  Vue.prototype.$mount = function(el){\r\n    console.log(el);\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let ops = vm.$options;\r\n    // 如果没有render函数\r\n    if(!ops.render){\r\n      let template;\r\n      // 没有写模板，但是有el，使用 #app内部的元素作为模板渲染数据\r\n      if(!ops.template&&el){\r\n        template = el.outerHTML\r\n      }else{\r\n        // 写了模板\r\n        if(el){\r\n          template = ops.template\r\n        }\r\n      }\r\n      if(template){\r\n        // 需要对模板进行编译\r\n        const render = compileToFunction(template);\r\n        ops.render = render;\r\n      }\r\n    }\r\n    // 有render方法\r\n    ops.render;// 最终就获取render方法\r\n  }\r\n}\r\n","import { initMixin } from \"./init\";\r\n\r\n\r\n\r\n/**\r\n * options:用户传入的选项 data,methods,computed,mounted....\r\n * \r\n */\r\nfunction Vue(options){\r\n  // initMixin在Vue对象上拓展的_init方法的方法\r\n  this._init(options)\r\n}\r\ninitMixin(Vue)\r\n\r\nexport default Vue;"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","Observe","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","console","log","document","querySelector","ops","render","template","outerHTML","compileToFunction"],"mappings":"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"}