{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/codegen.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 匹配 a-zA-Z_其中的一个 匹配多个满足 -.0-9_a-zA-Z\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;//?可有可无\r\n\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);// <div | <a:b\r\n// console.log(startTagOpen);// 匹配到一个标签名\r\nconst endTag =  new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);// </div |></div:aa>\r\n// console.log(endTag);// \r\n\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/;\r\n// console.log(attribute);// dd=\"bb\" 一共五个分组 匹配345分组\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// console.log(startTagClose);// div> | br/>\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n// console.log(defaultTagRE);//{{}}\r\n\r\n    \r\nexport const TYPES = {\r\n  ELEMENT_TYPE:1,\r\n  TEXT_TYPE:3\r\n}\r\n/**\r\n * 解析html,生成抽象语法树\r\n * @param {带解析的html} html \r\n * @returns node\r\n */\r\nexport function parseHTML(html){\r\n    const stack = [];// 用于存放元素；由 start,chars,end三个方法共同构建的树\r\n    let currentParent;// 指向栈中的最后一个元素\r\n    \r\n    // 最终的抽象语法树\r\n    let root;// 根节点\r\n    /**\r\n     * 创建一个抽象节点\r\n     * @param {元素标签名} tag \r\n     * @param {元素属性} attrs \r\n     * @returns 返回一个对象\r\n     */\r\n    function createASTElement(tag,attrs){\r\n        return {\r\n            tag,\r\n            type:TYPES.ELEMENT_TYPE,\r\n            children:[],\r\n            attrs,\r\n            parent:null\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理解析匹配到的开始标签和内容\r\n     * @param {匹配开始标签名} tag \r\n     * @param {匹配开始标签属性} attrs \r\n     */\r\n    function start(tag,attrs){\r\n        // console.log(tag,attrs,\"开始\");\r\n        let node = createASTElement(tag,attrs);\r\n        if(!root){// 看一下是否是空树\r\n            root = node;// 如果为空则当前节点为树根\r\n        }\r\n        // 如果有就添加\r\n        if(currentParent){\r\n            node.parent = currentParent;\r\n            // 把自己添加给父元素\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        currentParent = node;\r\n    }\r\n    /**\r\n     * 处理解析匹配到的文本\r\n     * @param {匹配到的文本} text \r\n     */\r\n    function chars(text){\r\n        // console.log(text,\"文本\");\r\n        text.replace(/\\s/g,'') && currentParent.children.push({\r\n            type:TYPES.TEXT_TYPE,\r\n            text,\r\n            parent:currentParent\r\n        })\r\n    }\r\n    /**\r\n     * 处理解析匹配到的结束标签标签\r\n     * @param {匹配结束标签名} tag \r\n     */\r\n    function end(tag){\r\n        // console.log(tag,\"结束\");\r\n        let node = stack.pop();// 弹出最后一个元素\r\n        // 更新currentParent\r\n        currentParent = stack[stack.length-1];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {缩短的距离} len \r\n     */\r\n    function advance(len){  \r\n        html = html.substring(len);\r\n    }\r\n    /**\r\n     * 将html中的开始标签中的 标签名 和属性解析出来\r\n     * 并删除匹配到的内容\r\n     * @returns {{tagName:'',attrs:[]}}\r\n     */\r\n    function parseStartTag(){\r\n        let start = html.match(startTagOpen);\r\n        if(start){\r\n            const match = {\r\n                tagName:start[1],// 标签名命名\r\n                attrs:[]\r\n            }\r\n            advance(start[0].length)\r\n\r\n            // 如果不是结束标签就一直匹配\r\n            let attr,end;\r\n            while(\r\n                !(end = html.match(startTagClose)) && \r\n                (attr = html.match(attribute))\r\n            ){\r\n                advance(attr[0].length);\r\n                // console.log({\r\n                //     name:attr[1],\r\n                //     value:attr[3]||attr[4]||attr[5]\r\n                //   });\r\n                match.attrs.push({\r\n                    name:attr[1],\r\n                    value:attr[3]||attr[4]||attr[5]\r\n                })\r\n            }\r\n            if(end){\r\n                advance(end[0].length)\r\n            }\r\n            // console.log(html);// 将< id=\"app\">内容解析完毕\r\n            return match;\r\n        }\r\n\r\n        return false;// 不是开始标签\r\n    }\r\n    // 当html被截取完了就停止了\r\n    while(html){\r\n        // console.log(html.indexOf('<'));<div>123</div>\r\n        // 如果indexOf中的索引是0，说明是个标签，\r\n        // 如果indexOf中的索引>0，则说明是结束标签位置\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd === 0){\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch){\r\n                // console.log(\"开始标签 和属性\",startTagMatch);\r\n\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                // 跳过本次循环\r\n                continue;\r\n            }\r\n\r\n            // 第一次匹配开始标签，后面的循环会进入匹配结束标签\r\n            const endTagMatch = html.match(endTag);\r\n            if(endTagMatch){\r\n                // console.log(\"结束标签\",endTagMatch);\r\n                end(endTagMatch[1]);\r\n                advance(endTagMatch[0].length);\r\n                continue;\r\n            }\r\n        }\r\n        //>0 textEnd是下一次循环的重新获得的值\r\n        if(textEnd>0){\r\n            // 继续截取文本内容 (中间可能是文本，或者空格)\r\n            let text = html.substring(0,textEnd);// 匹配到的文本\r\n            if(text){\r\n                chars(text);\r\n                advance(text.length);\r\n                // console.log(\"匹配到的文本:\",text);\r\n                // console.log(\"待解析的字符串:\",html);\r\n            }\r\n        }\r\n    }\r\n    // console.log(html,root);\r\n    return root;\r\n}","import { TYPES,defaultTagRE } from \"./parse.js\";\r\n/**\r\n * 解析抽象语法树中的属性\r\n * @param {属性} attrs \r\n * @returns \r\n */\r\nfunction genProps(attrs){\r\n    let str = '';// {name,value}\r\n    for(let i=0;i<attrs.length;i++){\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style'){\r\n            let obj = {};\r\n            attr.value.split(\";\").forEach(item=>{\r\n                let [key,value] = item.split(':');\r\n                obj[key] = value;\r\n            })\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`;\r\n}\r\n/**\r\n * 处理元素节点继续转换成抽象语法树\r\n * 处理文本节点\r\n * @param {*} node \r\n * @returns \r\n */\r\nfunction gen(node){\r\n    \r\n    if(node.type=== TYPES.ELEMENT_TYPE){// ele:1,text:3\r\n        return codegen(node);\r\n    }else{\r\n        // 文本\r\n        \r\n        let text = node.text.trim()\r\n        // test方法会向后继续匹配\r\n        if(!defaultTagRE.test(text)){\r\n            // console.log(text,\"没有{{}}\");\r\n            return `_v(${JSON.stringify(text)})`\r\n        }else{\r\n            // console.log(text,\"包含{{}}\");\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)){\r\n                // console.log(match[1]);\r\n                let index = match.index;// 匹配的位置{{name}}123{{age}}456789\r\n                // console.log('-'+text+'-','====',match,\"==\",index,\"匹配的索引位置\");\r\n                if(index>lastIndex){\r\n                    // 123\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n                }\r\n                // {{name}}\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if(lastIndex<text.length){\r\n                // 456789\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n\r\n        }\r\n    }\r\n}\r\n/**\r\n * 解析语法树中的孩子\r\n * @param {抽象语法树中的函数} children \r\n * @returns \r\n */\r\nfunction genChildren(children){\r\n    if(children){\r\n        return children.map(child=>gen(child)).join(',')\r\n    }\r\n}\r\n/**\r\n * 通过抽象语法树产生render函数\r\n * @param {抽象语法树} {tag: 'div', type: 1, children: Array(3), attrs: [{name:aa,value:bb}], parent: null}\r\n * @returns // _c(节点，属性，孩子)\r\n */\r\nexport function codegen(ast){\r\n    let children = genChildren(ast.children);\r\n    // _c(节点，属性，孩子)\r\n    let code = (`_c('${ast.tag}',${\r\n        ast.attrs.length>0?genProps(ast.attrs):'null'}${\r\n        ast.children.length ? `,${children}`:''\r\n    })`);\r\n    // console.log(code);\r\n    return code\r\n}","import { parseHTML } from \"./parse.js\";\r\nimport { codegen } from \"./codegen\";\r\n\r\n/**\r\n * 将template转换为ast语法树\r\n * 将ast抽象语法树 转换成 模板字符串 \r\n * 将模板字符串 封装成 render函数\r\n * @param {带解析的模板} template \r\n */\r\nexport function compileToFunction(template){\r\n\r\n    let ast = parseHTML(template);\r\n    // console.log(ast);\r\n    // 将抽象语法树，转换为render函数 _c创建元素，_v创建文本 _s=>JSON.stringif()\r\n    // 模板引擎的原理，with + new Function\r\n    let code = codegen(ast);\r\n    code = `with(this){\r\n        return ${code};\r\n    }`;\r\n    // 根据代码生成render函数\r\n    let render = new Function(code);\r\n    return render;\r\n    \r\n}","let id = 0;\r\n\r\n/**\r\n * 为每个响应式数据Dep\r\n */\r\nclass Dep{\r\n    constructor(){\r\n        this.id = id++;//属性的dep要收集watcher\r\n        this.subs = [];// 这里存放着当前属性对应的watcher有哪些\r\n    }\r\n    /**\r\n     * 响应式数据get的时候，dep会收集当前watcher\r\n     */\r\n    depend(){\r\n        // 收集watcher之前，让当前watcher记录当前dep\r\n        // 收集watcher 处理一个存放多个相同的watcher问题\r\n        // 当watcher记录dep\r\n        Dep.target.addDep(this);// 将当前dep实例 传给调用 挂载组件时候调用的 Watcher\r\n\r\n    }\r\n    /**\r\n     * 收集watcher\r\n     * @param {*} watcher \r\n     */\r\n    addSub(watcher){\r\n        this.subs.push(watcher);\r\n        // console.log(this.subs);\r\n    }\r\n    /**\r\n     * 通知更新\r\n     */\r\n    notify(){\r\n        this.subs.forEach(watcher=>{\r\n            watcher.update()\r\n        })\r\n    }\r\n}\r\n// 静态属性，只有一份\r\nDep.target = null;\r\nexport default Dep;","import Dep from \"./dep\";\r\n\r\nlet id = 0;\r\n/**\r\n * 1.当我们创建渲染watcher的时候，我们会把当前的渲染watcher放到Dep.target上\r\n * 2.调用_render（）会取值 走到get上\r\n */\r\n\r\nclass Watcher{\r\n    /**\r\n     * \r\n     * @param {当前实例} vm \r\n     * @param {渲染函数} fn \r\n     */\r\n    constructor(vm,fn,options){// 不同组件，有不同的watcher，目前只有一个根实例\r\n        this.id = id++;\r\n        this.renderWatcher = options;// boolean 表示是否是一个渲染Watcher\r\n        this.getter = fn;// 意味着调用这个函数可以发生取值操作，_render()\r\n        this.deps = [];// 一个watcher存放多个dep 后续实现计算属性，和一些清理工作需要用到\r\n        this.depsId = new Set();\r\n        this.get();\r\n    }\r\n    /**\r\n     * 让当前watcher记录dep\r\n     * @param {*} dep \r\n     */\r\n    addDep(dep){// 一个组件对应多个属性，重复的属性也不用重复记录\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this); // watcher已经记住dep了而且去重了，此时让dep也记住watcher\r\n        }\r\n        // console.log(this.deps);\r\n    }\r\n    /**\r\n     * 调用这个方法会触发响应式数据get方法-》触发dep收集-》\r\n     */\r\n    get(){\r\n        // 静态属性\r\n        Dep.target = this;// 将watcher实例挂载到dep身上\r\n        this.getter();// 去vm上取值 触发响应式数据get -》触发dep收集\r\n        Dep.target = null;// 清空实例\r\n    }\r\n    /**\r\n     * 重新渲染\r\n     */\r\n    update(){\r\n        \r\n        this.get();\r\n    }\r\n}\r\n// 需要给**每个属性**增加一个dep，目的就是收集watcher\r\n// 一个视图（组件）中 有多少个属性 （n个属性会对应一个视图）===》n个dep对应一个watcher\r\n// 一个属性 对应多个视图（组件）==》 一个dep对应多个组件 wacher\r\n// 多对多关系\r\nexport default Watcher;","\r\n/**\r\n * h(),_c()\r\n * 创建虚拟元素节点\r\n * data=>attrs\r\n */\r\nexport function createElementVNode(vm,tag,data={},...children){\r\n    let key = data?.key;\r\n    if(key){\r\n        delete data.key\r\n    }\r\n    return vNode(vm,tag,key,data,children)\r\n}\r\n/**\r\n * _v()\r\n * 创建虚拟文本节点\r\n */\r\nexport function createTextVNode(vm,text){\r\n    return vNode(vm,undefined,undefined,undefined,undefined,text)\r\n}\r\n/**\r\n * ast做语法层面的转换 描述的是语法本身 div name:value v-for（js css html）\r\n * 虚拟dom描述的是dom元素，可以增加一些自定义属性 描述dom\r\n * \r\n * @param {*} vm \r\n * @param {*} tag \r\n * @param {*} key \r\n * @param {*} data \r\n * @param {*} children \r\n * @param {*} text \r\n * @returns \r\n */\r\nfunction vNode(vm,tag,key,data,children,text){\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index\"\r\n\r\nfunction patchProps(el,props){\r\n\tfor(let key in props){\r\n\t\tif(key === 'style'){\r\n\t\t\tfor(let styleName in props.style){\r\n\t\t\t\tel.style[styleName] = props.style[styleName]\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tel.setAttribute(key,props[key]);\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\nfunction createElm(vNode){\r\n\tlet {tag,data,children,text} = vNode;\r\n\tif(typeof tag === 'string'){\r\n\t\t// 将真实节点和虚拟节点对应起来，后续修改了属性方便更新\r\n\t\tvNode.el = document.createElement(tag);\r\n\t\t// console.log(vNode.el);\r\n\t\t// 更新真实节点上的元素属性\r\n\t\tpatchProps(vNode.el,data);\r\n\t\tchildren.forEach(child=>{\r\n\t\t\tvNode.el.appendChild(createElm(child));\r\n\t\t})\r\n\t}else{\r\n\t\tvNode.el = document.createTextNode(text);\r\n\t}\r\n\treturn vNode.el;\r\n}\r\n\r\nfunction patch(oldVnode,vNode){\r\n\t// 初渲染流程\r\n\tconst isRealElement = oldVnode.nodeType;\r\n\tif(isRealElement){\r\n\t\tconst elm = oldVnode;// 获取真实节点\r\n\t\tconst parentElm = elm.parentNode;// 拿到父元素\r\n\t\tlet newElm = createElm(vNode);\r\n\t\tparentElm.insertBefore(newElm,elm.nextSibling)\r\n\t\tparentElm.removeChild(elm);\r\n\t\treturn newElm;\r\n\t}else{\r\n\t\t// diff算法\r\n\t}\r\n}\r\n\r\n/**\r\n * 给Vues实例身上拓展方法\r\n * @param {*} Vue \r\n */\r\nexport function initLifeCycle(Vue){\r\n\t// render函数\r\n\t/**\r\n\t *   _c(\r\n\t * \t\t'div',\r\n\t * \t\t{\r\n\t * \t\t\tid:\"app\",\r\n\t * \t\t\tstyle:{\r\n\t * \t\t\t\t\"color\":\"yellow\",\r\n\t * \t\t\t\t\"font-size\":\" 24px\"\r\n\t * \t\t\t}\r\n\t * \t\t},\r\n\t * \t\t_v(\"我是一段文字\"),\r\n\t * \t\t_c(\r\n\t * \t\t\t'div',\r\n\t * \t\t\t{\r\n\t * \t\t\t\tstyle:{\r\n\t * \t\t\t\t\t\"color\":\"red\"\r\n\t * \t\t\t\t}\r\n\t * \t\t\t},\r\n\t * \t\t\t_v(_s(id)+\"hello\"+_s(name)+\"456789\")\r\n\t * \t\t),\r\n\t * \t\t_c(\r\n\t * \t\t\t'span',\r\n\t * \t\t\tnull,\r\n\t * \t\t\t_v(\"world\")\r\n\t * \t\t)\r\n\t * \t);\r\n\t*/\r\n\tVue.prototype._c = function(){\r\n\t\treturn createElementVNode(this,...arguments)\r\n\t}\r\n\r\n\tVue.prototype._v = function(){\r\n\t\treturn createTextVNode(this,...arguments)\r\n\t}\r\n\r\n\tVue.prototype._s = function(value){\r\n\t\tif(typeof value !== 'object'){\r\n\t\t\treturn (value)\r\n\t\t}\r\n\t\treturn JSON.stringify(value)\r\n\t}\r\n\r\n\t/**\r\n\t * 将虚拟节点转换成真实节点\r\n\t */\r\n\tVue.prototype._update = function(vNode){\r\n\t\t// console.log(\"update\",vNode);\r\n\t\tconst vm = this;\r\n\t\tconst el = vm.$el;\r\n\t\t// console.log(vNode);\r\n\t\t// console.log(el);\r\n\t\t// 既有初始化的功能，又有更新的功能\r\n\t\tvm.$el = patch(el,vNode);// 拿到渲染完成后的新元素\r\n\t}\r\n\r\n\tVue.prototype._render = function(){\r\n\t\tconst vm = this;\r\n\t\t// console.log(\"render函数\",vm.$options.render.toString());\r\n\t\t// console.log(typeof vm.$options.render);\r\n\t\t// 熏染的时候，会从实例中取值\r\n\t\t// 可以将属性和视图绑定起来\r\n\t\treturn vm.$options.render.call(vm);\r\n\t}\t\r\n}\r\n/**\r\n * \r\n * @param {vue实例} vm \r\n * @param {渲染根节点} el \r\n */\r\nexport function mountComponent(vm,el){\r\n\tvm.$el = el;\r\n\r\n\tconst updateComponent = ()=>{\r\n\t\t// 1.调用render方法产生虚拟节点 虚拟dom\r\n\t\tlet vmDom = vm._render();// vm.$options.render()\r\n\t\t// 2、根据虚拟DOM产生真实dom\r\n\t\tvm._update(vmDom);// 3.将真实dom插入到el元素中\r\n\t}\r\n\tnew Watcher(vm,updateComponent,true);// true表示是一个渲染Watcher\r\n\t\r\n}\r\n// 创造响应式数据，\r\n// 模板转换成ast语法树，\r\n// 将ast树转换为render函数[模板字符串拼接成的render函数](产生虚拟节点，使用响应式数据)，render产生虚拟dom\r\n// 每次节点更新可以只执行render函数\r\n// 根据虚拟节点创造真实dom\r\n","// 重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype;// 获取数组的原型\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [// 找到所有的变异方法\r\n  'push','pop','shift','unshift','reverse','sort','splice'\r\n];\r\n// concat slice 不会改变原来的数据\r\nmethods.forEach(method=>{\r\n  // 代理newArrayProto身上的方法\r\n  newArrayProto[method] = function(...args){// 重写数组的方法\r\n    // console.log(\"method\",method);\r\n    // console.log(\"args\",args);\r\n    // 内部调用原来的方法 函数的劫持，切片编程\r\n    const result = oldArrayProto[method].call(this,...args);\r\n    // 对新添加的数据，再次进行劫持\r\n    let inserted;// 需要进行劫持的代码\r\n    let ob = this.__ob__;// 拿到Observe\r\n    switch(method){\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice': // arr.splice(0,1,{a:1},{b:2})\r\n        // 前两个参数是方法用的，需要截取一下，获取实际参数\r\n        inserted = args.slice(2)\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(\"inserted\",inserted);\r\n    if(inserted){\r\n      // 对新增的内容进行观测\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result;\r\n  }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\n/**\r\n * 该对象上有一些方法，调用这些方法可以对数据进行响应式代理\r\n */\r\nclass Observe {\r\n\t// 一开始进入该方法，一定是一个对象，然后才是其他东西\r\n\tconstructor(data) {\r\n\t\t// 想当于给数据加了一个标识，如果数据上有这个属性，说明被观测过\r\n\t\t// data.__ob__ = this;// Observe对象挂载到数据身上，方便使用\r\n\t\tObject.defineProperty(data, '__ob__', {\r\n\t\t\tvalue: this,\r\n\t\t\tenumerable: false\r\n\t\t})\r\n\t\t// 判断用户是否是一个数组\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\t// 重写数组的方法 7的变异方法 可以修改数组本身\r\n\t\t\t// 调用data向上查询方法的时候，被调用被劫持的函数\r\n\t\t\tdata.__proto__ = newArrayProto;\r\n\t\t\t// \"[a,{b:13}]\",数组中的对象要进行响应式劫持\r\n\t\t\tthis.observeArray(data);\r\n\t\t} else {// 不是数组的情况\r\n\t\t\tthis.walk(data);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 循环该对象所有keys，对所有属性进行代理劫持\r\n\t * @param {待劫持的数据对象} data \r\n\t */\r\n\twalk(data) {\r\n\t\t// 重新定义属性\r\n\t\tObject.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n\t}\r\n\t/**\r\n\t * 监听数组中的对象数据\r\n\t * @param {待监听的数据} data \r\n\t */\r\n\tobserveArray(data) {\r\n\t\t// 对数组中的 对象 数据进行监听，不是对象的数据\r\n\t\t// 被observe return掉了\r\n\t\tdata.forEach(item => observe(item))\r\n\t}\r\n}\r\n/**\r\n * 代理数据\r\n * @param {重新定义数据的目标} target \r\n * @param {目标的key} key \r\n * @param {目标的value} value \r\n */\r\nexport function defineReactive(target, key, value) {\r\n\t// 使用递归，对值为对象的数据，再次进行劫持\r\n\tobserve(value);// 内部进行判断，如果value不是对象，则结束调用\r\n\r\n\tlet dep = new Dep();// 给每个属性增加一个dep\r\n\r\n\tObject.defineProperty(target, key, {\r\n\t\t// 取值的时候\r\n\t\tget() {\r\n\t\t\tif (Dep.target) {\r\n\t\t\t\tdep.depend();// 让这个属性的收集器记住当前watcher\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\t// 修改的时候\r\n\t\tset(newValue) {\r\n\t\t\tif (newValue === value) return;\r\n\t\t\t// 如果设置的值是一个对象，继续进行代理\r\n\t\t\tobserve(newValue);\r\n\t\t\tvalue = newValue;\r\n\t\t\tdep.notify();//通知更新\r\n\t\t}\r\n\t})\r\n\r\n}\r\n/**\r\n * 劫持用户的数据，进行响应式代理\r\n * 会判断用户的数据里面是不是还是对象\r\n * 如果还是对象，则会递归调用代理\r\n * @param {用户选项data中的数据} data \r\n */\r\nexport function observe(data) {\r\n\tif (typeof data !== 'object' || data === null) {\r\n\t\treturn;// 只对对象做劫持\r\n\t}\r\n\r\n\t// 如果一个对象被劫持了，那就不需要再被劫持了\r\n\t// 要判断一个对象是否被劫持过了，\r\n\t// 可以增添一个实例，用实例来判断是否被劫持过\r\n\tif (data.__ob__ instanceof Observe) {\r\n\t\t// 标识该对象已经被代理过了\r\n\t\treturn data.__ob__;\r\n\t}\r\n\r\n\treturn new Observe(data);\r\n}","import { observe } from \"./observe/index\";\r\n\r\n/**\r\n * 初始化用户状态 data,props,methods,watch...\r\n * @param {Vue实例对象} vm \r\n */\r\nexport function initState(vm){\r\n  const opts = vm.$options;// 获取所有的选项\r\n  // if(opts.props){\r\n  //   initProps\r\n  // }\r\n  if(opts.data){\r\n    initData(vm)\r\n  }\r\n}\r\n/**\r\n * \r\n * @param {实例} vm \r\n * @param {代理数据} target \r\n * @param {代理数据的key} key \r\n */\r\nfunction proxy(vm,target,key){\r\n  // vm.name ==> vm._data.name\r\n  Object.defineProperty(vm,key,{\r\n    get(){\r\n      return vm[target][key]\r\n    },\r\n    set(newValue){\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n/**\r\n * 对 options.data 数据进行响应式拦截\r\n * @param {Vue实例对象} vm \r\n */\r\nfunction initData(vm){\r\n  // 将对象上的数据重新 赋值了一份，data和源对象断开连接\r\n  let data = vm.$options.data;// 可能是函数或对象\r\n  data = typeof data === 'function'?data.call(vm):data;\r\n  // 给实例对象设置上data，可以获取到代理劫持后的数据\r\n  vm._data = data\r\n  // 对数据进行劫持 vue2采用defineProperty\r\n  observe(data);\r\n  // 将vm._data上的所有数据代理直接代理到实例对象上\r\n  for(let key in data){\r\n    proxy(vm,'_data',key)\r\n  }\r\n\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\n/**\r\n * 用于给Vue实例身上拓展方法\r\n * @param {Vue实例对象} Vue \r\n */\r\nexport function initMixin(Vue) {\r\n\t/**\r\n\t * 用于初始化操作\r\n\t */\r\n\tVue.prototype._init = function (options) {\r\n\t\tconst vm = this;\r\n\t\t// 将用户传入的配置数据装载到Vue实例身上，方便其他方法获取配置数据\r\n\t\tvm.$options = options;\r\n\r\n\t\tinitState(vm);\r\n\t\tif (options.el) {\r\n\t\t\tvm.$mount(options.el)\r\n\t\t}\r\n\r\n\t}\r\n\t/**\r\n\t * 对根元素，或者自定义模板，进行模板解析\r\n\t * @param {根元素} el \r\n\t */\r\n\tVue.prototype.$mount = function (el) {\r\n\t\t// console.log(el);\r\n\t\tconst vm = this;\r\n\t\tel = document.querySelector(el);\r\n\t\tlet ops = vm.$options;\r\n\t\t// 如果没有render函数\r\n\t\tif (!ops.render) {\r\n\t\t\tlet template;\r\n\t\t\t// 没有写模板，但是有el，使用 #app内部的元素作为模板渲染数据\r\n\t\t\tif (!ops.template && el) {\r\n\t\t\t\ttemplate = el.outerHTML\r\n\t\t\t} else {\r\n\t\t\t\t// 写了模板\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\ttemplate = ops.template\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (template) {\r\n\t\t\t\t// 需要对模板进行编译 生成render函数(由模板语法组成的函数)，\r\n\t\t\t\t// 调用render函数 通过模板语法产生虚拟节点\r\n\t\t\t\tconst render = compileToFunction(template);\r\n\t\t\t\tops.render = render;// jsx 最终会被 编译成h('xxx')\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 有render方法\r\n\t\t// ops.render;// 最终就获取render方法\r\n\t\tmountComponent(vm, el);// 组件的挂载\r\n\t}\r\n\r\n}\r\n","import { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\n\r\n\r\n/**\r\n * options:用户传入的选项 data,methods,computed,mounted....\r\n * \r\n */\r\nfunction Vue(options){\r\n  // initMixin在Vue对象上拓展的_init方法的方法\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue);\r\n\r\ninitLifeCycle(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","TYPES","ELEMENT_TYPE","TEXT_TYPE","parseHTML","html","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","len","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","gen","codegen","trim","test","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","Watcher","vm","fn","options","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","createElementVNode","data","arguments","undefined","_len","Array","_key","vNode","createTextVNode","patchProps","el","props","styleName","style","setAttribute","createElm","document","createElement","appendChild","createTextNode","patch","oldVnode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_c","apply","call","_v","_s","_typeof","_update","$el","_render","$options","mountComponent","updateComponent","vmDom","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","result","inserted","ob","__ob__","observeArray","Observe","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","set","newValue","initState","opts","initData","proxy","_data","initMixin","_init","$mount","querySelector","ops","outerHTML"],"mappings":"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"}